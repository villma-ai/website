name: Build and Push to GCR

on:
  push:
    branches: [ cicd ]
  pull_request:
    branches: [ cicd ]
  workflow_dispatch:
    inputs:
      deploy_version:
        description: 'Specific version to deploy (commit SHA)'
        required: false
        type: string

env:
  GOOGLE_REGION: us-central1
  TF_VERSION: "1.12.2"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      GCR_HOSTNAME: us-central1-docker.pkg.dev
      IMAGE_NAME: villma/villma-website
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      GOOGLE_PROJECT: villma-dev
    environment: dev
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ env.GOOGLE_CREDENTIALS }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.GOOGLE_PROJECT }}

    - name: Configure Docker to use GCP credentials
      run: gcloud auth configure-docker ${{ env.GCR_HOSTNAME }}

    - name: Build Docker image
      run: |
        docker build -t ${{ env.GCR_HOSTNAME }}/${{ env.GOOGLE_PROJECT }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker build -t ${{ env.GCR_HOSTNAME }}/${{ env.GOOGLE_PROJECT }}/${{ env.IMAGE_NAME }}:latest .

    - name: Push Docker image
      run: |
        docker push ${{ env.GCR_HOSTNAME }}/${{ env.GOOGLE_PROJECT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.GCR_HOSTNAME }}/${{ env.GOOGLE_PROJECT }}/${{ env.IMAGE_NAME }}:latest

    - name: Print image details to job summary
      run: |
        echo "## 🐳 Docker Image Details" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Full Image Name:**" >> $GITHUB_STEP_SUMMARY
        echo "\`${{ env.GCR_HOSTNAME }}/${{ env.GOOGLE_PROJECT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Latest Tag:**" >> $GITHUB_STEP_SUMMARY
        echo "\`${{ env.GCR_HOSTNAME }}/${{ env.GOOGLE_PROJECT }}/${{ env.IMAGE_NAME }}:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Commit SHA:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Project ID:** \`${{ env.GOOGLE_PROJECT }}\`" >> $GITHUB_STEP_SUMMARY

  deploy-dev:
    runs-on: ubuntu-latest
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      GOOGLE_PROJECT: villma-dev
    environment: dev
    needs: build-and-push
    steps:
    - name: Clone Terraform repository
      run: |
        git clone git@github.com:villma-ai/villma-terraform.git terraform-repo
        cd terraform-repo

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
  
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ env.GOOGLE_CREDENTIALS }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.GOOGLE_PROJECT }}

    - name: Terraform Init
      run: terraform init -backend-config=environments/dev/backend.conf

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: |
        terraform plan \
          -var-file=environments/dev/terraform.tfvars \
          -target=module.website.google_cloud_run_service.website \
          -out=tfplan
      env:
        TF_VAR_app_version: ${{ github.event.inputs.deploy_version || github.sha }}

    - name: Upload Plan Artifact
      uses: actions/upload-artifact@v4
      with:
        name: tfplan-dev
        path: environments/dev/tfplan
        retention-days: 1

    - name: Set Plan Complete
      id: plan-complete
      run: echo "value=true" >> $GITHUB_OUTPUT

    - name: Terraform Apply
      run: terraform apply -var-file=environments/dev/terraform.tfvars -target=module.website.google_cloud_run_service.website -auto-approve
      env:
        TF_VAR_app_version: ${{ github.event.inputs.deploy_version || github.sha }}
