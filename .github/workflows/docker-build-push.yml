name: Build and Push to GCR

on:
  push:
    branches: [ cicd ]
  pull_request:
    branches: [ cicd ]
  workflow_dispatch:

env:
  PROJECT_ID: villma-dev
  GCR_HOSTNAME: us-central1-docker.pkg.dev
  IMAGE_NAME: villma-website
  WORKLOAD_PROVIDER: ${{ secrets.GCP_WORKLOAD_PROVIDER }}
  SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to GCP with WIF
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ env.WORKLOAD_PROVIDER }}
        service_account: ${{ env.SERVICE_ACCOUNT }}

    # - name: Set up Cloud SDK
    #   uses: google-github-actions/setup-gcloud@v2
    #   with:
    #     project_id: ${{ env.PROJECT_ID }}
    #     service_account_key: ${{ secrets.GCP_SA_KEY }}
    #     export_default_credentials: true

    - name: Configure Docker to use GCP credentials
      run: gcloud auth configure-docker ${{ env.GCR_HOSTNAME }}

    - name: Build Docker image
      run: |
        docker build -t ${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker build -t ${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest .

    - name: Push Docker image
      run: |
        docker push ${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest

  # deploy-to-gcp:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push
  #   steps:
  #   - name: Install tfenv
  #     run: |
  #       git clone --depth=1 https://github.com/tfutils/tfenv.git ~/.tfenv
  #       echo 'export PATH="$HOME/.tfenv/bin:$PATH"' >> $GITHUB_ENV
  #       export PATH="$HOME/.tfenv/bin:$PATH"

  #   - name: Clone Terraform repository
  #     run: |
  #       git clone ${{ secrets.TERRAFORM_REPO_URL }} terraform-repo
  #       cd terraform-repo

  #   - name: Terraform Init
  #     run: |
  #       export PATH="$HOME/.tfenv/bin:$PATH"
  #       cd terraform-repo
  #       terraform init

  #   - name: Terraform Plan
  #     run: |
  #       export PATH="$HOME/.tfenv/bin:$PATH"
  #       cd terraform-repo
  #       terraform plan -var="image_tag=${{ github.sha }}" -var="project_id=${{ env.PROJECT_ID }}"

  #   - name: Terraform Apply
  #     run: |
  #       export PATH="$HOME/.tfenv/bin:$PATH"
  #       cd terraform-repo
  #       terraform apply -auto-approve -var="image_tag=${{ github.sha }}" -var="project_id=${{ env.PROJECT_ID }}"
